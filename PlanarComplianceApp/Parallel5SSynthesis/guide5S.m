function guide5S

global gdeData5S
delete(findobj(0,'Tag', 'fig2'))
%% creates the prompt window that instructs the user 
gde = figure(2);
set(gde,'renderer','OpenGL','visible','off');
set(gde, 'Units', 'pixels')
set(gde,'menubar','none')
set(gde, 'Tag', 'fig2')

pan on;
pan off;


%% Defines an object that stores guide message data

gdeData5S = guide_message;

gdeData5S.msg1 = ['  Welcome to the Five Spring Parallel Mechanism Designer. ' ...
    'The panel to the left of the plot allows you to control the program. ' ...
    'The panel to the right of the plot shows you the specifications of your mechanism. ' ...
    'This includes the line of action of each spring, the neccesary stiffness of each spring, and the stiffness matrix calculated ' ...
    'using the spring stiffnesses. The calculated stiffness matrix is for confirmation that the spring stiffnesses will realize the stiffness matrix. ' ...
    'To enter the stiffness matrix that you would like to realize, select the matrix cells on the diagonal and above the diagonal and enter your desired value. ' ...
    'This matrix must be symmetric positive definite because the spring stiffnesses must be positive to passively realize the stiffness matrix. ' ...
    'The program will automatically update off-diagonal values to keep the matrix symmetric. ' fprintf('%s\n%s') newline ...
    '   The red circle surrounding the stiffness center is caculated using the eigenvalues of the stiffness matrix. ' ...
    'At least one wrench line of action must  intersect the circle and at least one wrench line of action must not intersect the circle for the stiffness ' ...
    'to be passively realized. ' fprintf('%s\n%s') newline ...
    '   The red lines passing through the stiffness center are also caluclated using the eigenvalues of the stiffness matrix and are oriented relative to its eigenvectors. ' ...
    'Each wrench has a line perpendicular to it that also passes through the stiffness center. The spring wrenches must be positioned such a way that there is at least one of these ' ...
    'lines in each of the two regions created by the red lines on the plot. This condition must be satisfied for the stiffness to be passively realized.' fprintf('%s\n%s') newline ...
    '   To begin, select an arbitrary point on the axes or enter coordinates and press submit to define the first twist center. The lines of action of the first two springs ' ...
    'will pass through this point.'];

gdeData5S.msg2 = 'Select or enter the coordinates of another arbitrary point to define the second twist center. The lines of action of the third and fourth springs will pass through this point.';

gdeData5S.msg3 = ['Select or enter the coordinates of two more points to define a third line. This line will be the line of action for spring five. ' ...
    'This line must be selected such that the first two twist centers are  on the same side of the line.'];

gdeData5S.msg4 = ['Select or enter the coordinates of another point to define the third line. This line will be the line of action for spring five. ' ...
    'This line must be selected such that the first two twist centers are on the same side of the line.'];

gdeData5S.msg5 = ['Select another point to define the fourth twist center. If this point is contained in the triangle defined by the first three lines, then the line of action of the wrench associated ' ...
            'with it cannot intersect the triangle. If this point is outside of the triangle, then the line of action of the wrench associated ' ...
            'with it must intersect the triangle.'];

gdeData5S.msg6 = 'Select or enter a point on the dashed line to define the final twist center.';

gdeData5S.msg7 = 'Drag the final twist center along the dashed line until all spring stifnesses have positiove values.';



%% creates a textbox in the window and sets the initial message
msg = uicontrol('Style', 'Text', ...
    'Parent', gde, ...
    'FontUnits', 'normalized', ...
    'Fontsize', 0.035, ...
    'units', 'normalized', ...
    'String', gdeData5S.msg1, ...
    'Position', [0.01, 0.01, 0.98, 0.98], ...
    'BackgroundColor', [1, 1, 1], ...
    'Tag', 'msg', ...
    'HorizontalAlignment','left');


%% Creates buttons to go backward and forward

next = uicontrol('Style', 'pushbutton', ...
    'Parent', gde, ...
    'FontUnits', 'normalized', ...
    'FontSize', 0.7, ...
    'String', 'Next >', ...
    'units', 'normalized', ...
    'Position', [0.52, 0.05, 0.1, 0.05], ...
    'BackgroundColor', [1 1 1], ...
    'ForegroundColor', [0, 0, 0], ...
    'Callback', {@guideCallback5S, 'Next', msg});

Previous = uicontrol('Style', 'pushbutton', ...
    'Parent', gde, ...
    'FontUnits', 'normalized', ...
    'FontSize', 0.7, ...
    'String', '< Previous', ...
    'units', 'normalized', ...
    'Position', [0.38, 0.05, 0.1, 0.05], ...
    'BackgroundColor', [1 1 1], ...
    'ForegroundColor', [0, 0, 0], ...
    'Callback', {@guideCallback5S, 'Previous', msg});






%% Sets the intial window position and size
resolution = get(0,'screensize');
set(gde,'position',[resolution(3)/13,resolution(4)/9,1200,670]);

set(gde,'visible','on'); hold on

end