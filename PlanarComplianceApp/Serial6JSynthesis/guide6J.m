function guide6J

global gdeData6J
delete(findobj(0,'Tag', 'fig2'))
%% creates the prompt window that instructs the user 
gde = figure(2);
set(gde,'renderer','OpenGL','visible','off');
set(gde, 'Units', 'pixels')
set(gde,'menubar','none')
set(gde, 'Tag', 'fig2')

pan on;
pan off;

%% Defines an object that stores guide message data

gdeData6J = guide_message;

gdeData6J.msg1 = ['  Welcome to the Six Joint Serial Mechanism Designer. ' ...
    'The panel to the left of the plot allows you to control the program. ' ...
    'The panel to the right of the plot shows you the specifications of your mechanism. ' ...
    'This includes the location of each joint, the neccesary compliance of each joint, and the compliance matrix calculated ' ...
    'using the joint compliances. The calculated compliance matrix is for confirmation that the joint compliances will realize the compliance matrix. ' ...
    'To enter the compliance matrix that you would like to realize, select the matrix cells on the diagonal and above the diagonal and enter your desired value. ' ...
    'This matrix must be symmetric positive definite because the joint compliances must be positive to passively realize the complaince matrix. ' ...
    'The program will automatically update off-diagonal values to keep the matrix symmetric. ' fprintf('%s\n%s') newline ...
    '   The red circle surrounding the compliance center is caculated using the eigenvalues of the compliance matrix. ' ...
    'At least one joint must be located inside the circle and at least one joint must be located outside of the circle for the compliance ' ...
    'to be passively realized. ' fprintf('%s\n%s') newline ...
    '   The four red lines surrounding the compliance center are also caluclated using the eigenvalues of the compliance matrix and are parallel to its eigenvectors. ' ...
    'for each set of parallel lines, at least one joint must be between the lines and at least one joint must be outside of the lines for the complinace to be ' ...
    'passively realized.' fprintf('%s\n%s') newline ...
    '   To begin, select an arbitrary point or enter the coordinates of a point and press submit ' ...
    'to define the line of action of the first wrench. This line will pass through the seleceted point' ...
    ' and the origin. This line will also pass through Joints 1 and 2.'];

gdeData6J.msg2 = ['Select or enter another two points to define the ' ...
            'line of action of the second wrench. The twists associated with the ' ...
            'first and second wrench must be centered on the same side of the lines of action for ' ...
            'wrench one and two. These points are represented by a blue dot and a yellow dot.'];

gdeData6J.msg3 = ['Select or enter another point to define the line' ...
            ' of action of the second wrench.'];

gdeData6J.msg4 = ['Joint 1 has been placed at the origin, and it cannot be moved. Select or ' ...
            'enter a point on the blue line ' ...
            'to define Joint 2. The first four joints must be oriented such that ' ...
            'the two displayed twists are contained in the quadrilateral defined by ' ...
            'the joints.'];

gdeData6J.msg5 = ['Select or enter a point on the yellow line ' ...
            'to define joint 3. The first four joints must be oriented such that ' ...
            'the two displayed twists are contained in the quadrilateral defined by ' ...
            'the joints.'];

gdeData6J.msg6 = ['Select or enter a point on the yellow line' ...
            ' to define joint 4. The first four joints must be oriented such that ' ...
            'the two displayed twists are contained in the quadrilateral defined by ' ...
            'the joints.'];

gdeData6J.msg7 = ['Judiciously choose a point for the postion of joint 5.' ...
            ' Select or enter the coordinates of this point to define joint 5. The segment connecting joint 5' ...
            ' and joint 6 must intersect the quatdratic curve, which is shown in red on the axes, ' ...
            'exactly once.'];

gdeData6J.msg8 = ['Select or enter a point to define Joint 6. ' ...
            'The Segment connecting Joint 5 and Joint 6 must intersect the ' ...
            'quadratic curve exacly once. After Joint 6 is defined, two triangles' ...
            ' will appear. Click and drag the Joints until the blue point is in the ' ...
            'blue triangle and the yellow point is in the yellow triangle.'];

%% creates a textbox in the window and sets the initial message
msg = uicontrol('Style', 'Text', ...
    'Parent', gde, ...
    'FontUnits', 'normalized', ...
    'Fontsize', 0.035, ...
    'units', 'normalized', ...
    'String', gdeData6J.msg1, ...
    'Position', [0.01, 0.01, 0.98, 0.98], ...
    'BackgroundColor', [1, 1, 1], ...
    'Tag', 'msg', ...
    'HorizontalAlignment','left');


%% Creates buttons to go backward and forward

next = uicontrol('Style', 'pushbutton', ...
    'Parent', gde, ...
    'FontUnits', 'normalized', ...
    'FontSize', 0.7, ...
    'String', 'Next >', ...
    'units', 'normalized', ...
    'Position', [0.52, 0.05, 0.1, 0.05], ...
    'BackgroundColor', [1 1 1], ...
    'ForegroundColor', [0, 0, 0], ...
    'Callback', {@guideCallback6J, 'Next', msg});

Previous = uicontrol('Style', 'pushbutton', ...
    'Parent', gde, ...
    'FontUnits', 'normalized', ...
    'FontSize', 0.7, ...
    'String', '< Previous', ...
    'units', 'normalized', ...
    'Position', [0.38, 0.05, 0.1, 0.05], ...
    'BackgroundColor', [1 1 1], ...
    'ForegroundColor', [0, 0, 0], ...
    'Callback', {@guideCallback6J, 'Previous', msg});






%% Sets the intial window position and size
resolution = get(0,'screensize');
set(gde,'position',[resolution(3)/13,resolution(4)/9,1200,670]);

set(gde,'visible','on'); hold on

end