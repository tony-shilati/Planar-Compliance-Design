function guide6J_FLL


global gdeData6J_FLL
delete(findobj(0,'Tag', 'fig2'))
%% creates the prompt window that instructs the user 
gde = figure(2);
set(gde,'renderer','OpenGL','visible','off');
set(gde, 'Units', 'pixels')
set(gde,'menubar','none')
set(gde, 'Tag', 'fig2')

pan on;
pan off;


%% Defines an object that stores guide message data

gdeData6J_FLL = guide_message;

gdeData6J_FLL.msg1 = ['  Welcome to the Six Joint Fixed Link Length Serial Mechanism Designer. ' ...
    'The panel to the left of the plot allows you to control the program. ' ...
    'The panel to the right of the plot shows you the specifications of your mechanism. ' ...
    'This includes the location of each joint, the neccesary compliance of each joint, and the compliance matrix calculated ' ...
    'using the joint compliances. The calculated compliance matrix is for confirmation that the joint compliances will realize the compliance matrix. ' ...
    'To enter the compliance matrix that you would like to realize, select the matrix cells on the diagonal and above the diagonal and enter your desired value. ' ...
    'This matrix must be symmetric positive definite because the joint compliances must be positive to passively realize the complaince matrix. ' ...
    'The program will automatically update off-diagonal values to keep the matrix symmetric. ' fprintf('%s\n%s') newline ...
    '   The red circle surrounding the compliance center is caculated using the eigenvalues of the compliance matrix. ' ...
    'At least one joint must be located inside the circle and at least one joint must be located outside of the circle for the compliance to be passively realized. ' fprintf('%s\n%s') newline ...
    '   The four red lines surrounding the compliance center are also caluclated using the eigenvalues of the compliance matrix and are parallel to its eigenvectors. ' ...
    'for each set of parallel lines, at least one joint must be between the lines and at least one joint must be outside of the lines for the complinace to be ' ...
    'passively realized.' fprintf('%s\n%s') newline ...
    'To begin, enter a length for each link and press submit.'];

gdeData6J_FLL.msg2 = ['Select an arbitrary point on the graph or enter the coordinates of a point and press submit to define the location of ' ...
            'the first joint. '];

gdeData6J_FLL.msg3 = ['Select or enter coordinates for another point that is inside the large blue circle. This will define the ' ...
            'location of joint 6.'];

gdeData6J_FLL.msg4 = ['Select or enter coordinates for a point on the circle surrounding joint 1. This will define the location ' ...
            'of joint 2. Keep in mind that you need to build your mechanism from joint 1 to joint 6.'];

gdeData6J_FLL.msg5 = ['Select or enter coordinates for a point that is outside of the blue quadratic curve. This will define' ...
            ' the location of the first twist center. You can drag this point to change the possible locations of joint 3. ' ...
            'The possible locations of joint three are where the line of action of the wrench associated with twist one and the ' ...
            'circle that is the locus of possible positions for joint three intersect. twist center 1 must be in the triangle defined by ' ...
            'joints one, two, and five.'];

gdeData6J_FLL.msg6 = ['Select one of the red points on the circle around joint 2 to define the location of joint 3. Twist center one ' ...
            'can be dragged around to change the location of these points on the circle. Twist center one must be in the triangle defined by ' ...
            'joints one, two, and five.'];

gdeData6J_FLL.msg7 = 'Select one of the red points on the circle around joint 3 to define the location of joint 4.';

gdeData6J_FLL.msg8 = 'Select one of the red points on the circle around joint 4 to define the location of joint 5.';

gdeData6J_FLL.msg9 = ['Drag Joint 4 and joint 5 until they are on opposite sides of the quadratic curve, and all of the joint compliances ' ...
        'are positive. Once all of the joint compliances are positive, the synthesis procedure is complete.'];


%% creates a textbox in the window and sets the initial message
msg = uicontrol('Style', 'Text', ...
    'Parent', gde, ...
    'FontUnits', 'normalized', ...
    'Fontsize', 0.035, ...
    'units', 'normalized', ...
    'String', gdeData6J_FLL.msg1, ...
    'Position', [0.01, 0.01, 0.98, 0.98], ...
    'BackgroundColor', [1, 1, 1], ...
    'Tag', 'msg', 'HorizontalAlignment','left');


%% Creates buttons to go backward and forward

next = uicontrol('Style', 'pushbutton', ...
    'Parent', gde, ...
    'FontUnits', 'normalized', ...
    'FontSize', 0.7, ...
    'String', 'Next >', ...
    'units', 'normalized', ...
    'Position', [0.52, 0.05, 0.1, 0.05], ...
    'BackgroundColor', [1 1 1], ...
    'ForegroundColor', [0, 0, 0], ...
    'Callback', {@guideCallback6J_FLL, 'Next', msg});

Previous = uicontrol('Style', 'pushbutton', ...
    'Parent', gde, ...
    'FontUnits', 'normalized', ...
    'FontSize', 0.7, ...
    'String', '< Previous', ...
    'units', 'normalized', ...
    'Position', [0.38, 0.05, 0.1, 0.05], ...
    'BackgroundColor', [1 1 1], ...
    'ForegroundColor', [0, 0, 0], ...
    'Callback', {@guideCallback6J_FLL, 'Previous', msg});






%% Sets the intial window position and size
resolution = get(0,'screensize');
set(gde,'position',[resolution(3)/13,resolution(4)/9,1200,670]);

set(gde,'visible','on'); hold on

end